08 MIDDLEWARE
================================================================================
Generated on: 2025-09-02 18:00:53
Project Path: D:\smk_monitoring_app

------------------------------------------------------------
FILE: app\Http\Middleware\EnsureEmailIsVerified.php
Path: D:\smk_monitoring_app\app\Http\Middleware\EnsureEmailIsVerified.php
Size: 739 bytes
Last Modified: 08/27/2025 00:28:58
------------------------------------------------------------
<?php

namespace App\Http\Middleware;

use Closure;
use Illuminate\Contracts\Auth\MustVerifyEmail;
use Illuminate\Http\Request;
use Symfony\Component\HttpFoundation\Response;

class EnsureEmailIsVerified
{
    /**
     * Handle an incoming request.
     *
     * @param  \Closure(\Illuminate\Http\Request): (\Symfony\Component\HttpFoundation\Response)  $next
     */
    public function handle(Request $request, Closure $next): Response
    {
        if (! $request->user() ||
            ($request->user() instanceof MustVerifyEmail &&
            ! $request->user()->hasVerifiedEmail())) {
            return response()->json(['message' => 'Your email address is not verified.'], 409);
        }

        return $next($request);
    }
}



------------------------------------------------------------
FILE: app\Http\Middleware\HandleInertiaRequests.php
Path: D:\smk_monitoring_app\app\Http\Middleware\HandleInertiaRequests.php
Size: 780 bytes
Last Modified: 08/11/2025 12:26:00
------------------------------------------------------------
<?php

namespace App\Http\Middleware;

use Illuminate\Http\Request;
use Inertia\Middleware;

class HandleInertiaRequests extends Middleware
{
    /**
     * The root template that is loaded on the first page visit.
     *
     * @var string
     */
    protected $rootView = 'app';

    /**
     * Determine the current asset version.
     */
    public function version(Request $request): ?string
    {
        return parent::version($request);
    }

    /**
     * Define the props that are shared by default.
     *
     * @return array<string, mixed>
     */
    public function share(Request $request): array
    {
        return [
            ...parent::share($request),
            'auth' => [
                'user' => $request->user(),
            ],
        ];
    }
}



================================================================================
TOTAL FILES IN CATEGORY: 2
================================================================================
